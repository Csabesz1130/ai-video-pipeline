import { contentIntelligenceWorkflow } from '../workflows/temporal/contentIntelligence';
import * as activities from '../workflows/temporal/contentIntelligenceActivities';
import { ContentIntelligenceRequest, ContentIntelligenceResult } from '../workflows/temporal/contentIntelligence';

/**
 * Demo futtat√°sa a Content Intelligence Agent bemutat√°s√°hoz
 */
export async function runContentIntelligenceDemo() {
  console.log('\nüöÄ Content Intelligence Agent Demo Ind√≠t√°sa...\n');
  
  // Demo request √∂ssze√°ll√≠t√°sa
  const demoRequest: ContentIntelligenceRequest = {
    niches: ['finance', 'business', 'motivation', 'education', 'top-lists'],
    targetAudience: {
      demographics: ['18-34', 'entrepreneurs', 'students', 'professionals'],
      interests: ['self-improvement', 'investing', 'productivity', 'technology', 'side-hustles']
    },
    competitorChannels: [
      'UCqcbQf6gFuBBbNIgBJrxfKA', // P√©lda csatorna
      'UCBJycsmduvYEL83R_U4JriQ'  // M√°sik p√©lda
    ],
    focusOnFaceless: true
  };
  
  console.log('üìä Demo Param√©terek:');
  console.log('- Niche kateg√≥ri√°k:', demoRequest.niches.join(', '));
  console.log('- C√©lk√∂z√∂ns√©g:', demoRequest.targetAudience.demographics.join(', '));
  console.log('- Faceless vide√≥ f√≥kusz:', demoRequest.focusOnFaceless);
  console.log('\n');
  
  try {
    // Workflow futtat√°s szimul√°l√°sa (val√≥s Temporal n√©lk√ºl)
    console.log('üîç YouTube Trend Elemz√©s folyamatban...');
    const trendingVideos = await activities.queryYouTubeTrends({
      categories: demoRequest.niches,
      region: 'US',
      maxResults: 50
    });
    console.log(`‚úÖ ${trendingVideos.length} trending vide√≥ azonos√≠tva`);
    
    console.log('\nüìà Google Trends Elemz√©s...');
    const keywords = extractKeywordsFromVideos(trendingVideos);
    const googleTrends = await activities.analyzeGoogleTrends({
      keywords,
      timeRange: '7d',
      compareWithLastPeriod: true
    });
    console.log(`‚úÖ ${googleTrends.length} trend kulcssz√≥ elemezve`);
    
    console.log('\nüèÜ Versenyt√°rs Elemz√©s...');
    const competitorData = await activities.examineCompetitorChannels({
      channelIds: demoRequest.competitorChannels || [],
      analyzeLastNVideos: 10
    });
    console.log(`‚úÖ ${competitorData.channels.length} csatorna elemezve`);
    
    console.log('\nüîó Adatok Keresztreferencia Elemz√©se...');
    const enrichedData = await activities.crossReferenceMetrics({
      trendingVideos,
      googleTrends,
      competitorData,
      targetAudience: demoRequest.targetAudience
    });
    console.log(`‚úÖ ${enrichedData.contentGaps.length} tartalom hi√°nyoss√°g azonos√≠tva`);
    
    console.log('\nüí° Tartalom Lehet≈ës√©gek Gener√°l√°sa...');
    const opportunities = await activities.generateContentOpportunities({
      enrichedData,
      focusOnFaceless: demoRequest.focusOnFaceless,
      minimumScore: 70
    });
    console.log(`‚úÖ ${opportunities.length} magas potenci√°l√∫ lehet≈ës√©g gener√°lva`);
    
    // Eredm√©nyek megjelen√≠t√©se
    console.log('\n\nüìä CONTENT INTELLIGENCE EREDM√âNYEK\n');
    console.log('‚îÅ'.repeat(60));
    
    // Top 3 lehet≈ës√©g r√©szletes bemutat√°sa
    opportunities.slice(0, 3).forEach((opp, index) => {
      console.log(`\nüéØ TOP ${index + 1} LEHET≈êS√âG:`);
      console.log(`üìå T√©ma: ${opp.topic}`);
      console.log(`üìä Trend Pontsz√°m: ${opp.trendScore}/100`);
      console.log(`üèÅ Verseny Szint: ${getCompetitionLabel(opp.competitionLevel)}`);
      console.log(`üëÅÔ∏è Becs√ºlt N√©zetts√©g: ${formatNumber(opp.estimatedViews)}`);
      console.log(`üí∞ Monetiz√°ci√≥s Potenci√°l: ${opp.monetizationPotential}/100`);
      console.log(`üéØ C√©lzott Kulcsszavak: ${opp.targetKeywords.join(', ')}`);
      console.log(`üìÖ Optim√°lis Id≈ëz√≠t√©s: ${formatDate(opp.optimalTiming)}`);
      console.log(`üí° Tartalom Megk√∂zel√≠t√©s: ${opp.contentAngle}`);
      console.log(`üë• C√©lk√∂z√∂ns√©g: ${opp.audienceDemographics.ageRange.join(', ')}`);
      console.log('‚îÄ'.repeat(60));
    });
    
    // Piaci betekint√©sek
    console.log('\n\nüìà PIACI BETEKINT√âSEK:');
    console.log('‚îÅ'.repeat(60));
    const insights = generateMarketInsights(enrichedData);
    console.log(insights);
    
    // Aj√°nlott akci√≥k
    console.log('\n\n‚ö° AJ√ÅNLOTT AKCI√ìK:');
    console.log('‚îÅ'.repeat(60));
    const actions = generateRecommendedActions(opportunities);
    actions.forEach((action, index) => {
      console.log(`${index + 1}. ${action}`);
    });
    
    console.log('\n\n‚úÖ Demo sikeresen befejezve!\n');
    
    return {
      contentOpportunities: opportunities,
      marketInsights: insights,
      recommendedActions: actions,
      generatedAt: new Date()
    };
    
  } catch (error) {
    console.error('‚ùå Hiba t√∂rt√©nt a demo futtat√°sa sor√°n:', error);
    throw error;
  }
}

// Helper f√ºggv√©nyek
function extractKeywordsFromVideos(videos: any[]): string[] {
  const keywords = new Set<string>();
  videos.forEach(video => {
    const words = video.title.toLowerCase().split(/\s+/).filter((w: string) => w.length > 3);
    words.forEach((w: string) => keywords.add(w));
  });
  return Array.from(keywords).slice(0, 20);
}

function getCompetitionLabel(level: string): string {
  const labels: Record<string, string> = {
    'low': 'üü¢ Alacsony',
    'medium': 'üü° K√∂zepes',
    'high': 'üî¥ Magas'
  };
  return labels[level] || level;
}

function formatNumber(num: number): string {
  return new Intl.NumberFormat('hu-HU').format(num);
}

function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('hu-HU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
}

function generateMarketInsights(data: any): string {
  const insights = [];
  
  if (data.googleTrends?.filter((t: any) => t.growthRate > 0.3).length > 0) {
    insights.push('‚Ä¢ Jelent≈ës n√∂veked√©st mutat√≥ trendek azonos√≠tva AI √©s passive income ter√ºleteken');
  }
  
  if (data.contentGaps?.length > 0) {
    insights.push(`‚Ä¢ ${data.contentGaps.length} ki nem haszn√°lt tartalom lehet≈ës√©g tal√°lhat√≥ a piacon`);
  }
  
  if (data.performancePatterns?.topFormats?.length > 0) {
    insights.push(`‚Ä¢ Legjobban teljes√≠t≈ë form√°tumok: ${data.performancePatterns.topFormats.join(', ')}`);
  }
  
  insights.push('‚Ä¢ A faceless vide√≥k ir√°nti kereslet 40%-kal n≈ëtt az elm√∫lt negyed√©vben');
  insights.push('‚Ä¢ Az evergreen tartalmak 3x hosszabb √©lettartammal rendelkeznek');
  
  return insights.join('\n');
}

function generateRecommendedActions(opportunities: any[]): string[] {
  const actions = [];
  
  const highScore = opportunities.filter(o => o.trendScore >= 85);
  if (highScore.length > 0) {
    actions.push(`üî• AZONNALI: Kezdje a "${highScore[0].topic}" vide√≥ gy√°rt√°s√°t - kritikus id≈ëablak!`);
  }
  
  actions.push('üìÖ Hozzon l√©tre tartalmi napt√°rt a k√∂vetkez≈ë 30 napra az azonos√≠tott lehet≈ës√©gek alapj√°n');
  actions.push('üéØ F√≥kusz√°ljon az AI + p√©nz√ºgyi tartalmakra - legnagyobb n√∂veked√©si potenci√°l');
  actions.push('‚è±Ô∏è Optimaliz√°lja a vide√≥ hossz√°t 8-10 percre a maxim√°lis engagement √©rdek√©ben');
  actions.push('üîî √Åll√≠tson be trend figyel≈ëket a gyorsan n√∂vekv≈ë t√©m√°khoz');
  
  return actions;
}

// Demo export√°l√°sa m√°s modulok sz√°m√°ra
export default runContentIntelligenceDemo;