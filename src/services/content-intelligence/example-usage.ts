import { ContentIntelligenceAgentImpl } from './ContentIntelligenceAgent';
import { ContentAnalysisConfig } from './types';

/**
 * P√©lda a Content Intelligence Agent haszn√°lat√°ra
 */
async function exampleUsage() {
  // Inicializ√°l√°s YouTube API kulccsal
  const agent = new ContentIntelligenceAgentImpl(process.env.YOUTUBE_API_KEY || '');

  // Elemz√©si konfigur√°ci√≥
  const config: ContentAnalysisConfig = {
    categories: ['finance', 'business', 'motivation', 'education'],
    minTrendScore: 50,
    maxCompetitionLevel: 'medium',
    timeWindowDays: 30,
    language: 'en',
    region: 'US',
    competitorChannels: [
      'UCqWNJOs1bpo8rHr3WqJjmcg', // P√©lda csatorna ID
      'UCY30JRSgfhZBnpKFM9HdTkw'  // P√©lda csatorna ID
    ],
    seedKeywords: [
      'passive income 2024',
      'ai business ideas',
      'motivation monday',
      'learn programming fast'
    ]
  };

  try {
    // Tartalmi lehet≈ës√©gek elemz√©se
    console.log('üîç Tartalmi lehet≈ës√©gek elemz√©se...');
    const response = await agent.analyzeContentOpportunities(config);

    // Eredm√©nyek megjelen√≠t√©se
    console.log('\nüìä TOP TARTALMI LEHET≈êS√âGEK:');
    response.contentOpportunities.forEach((opp, index) => {
      console.log(`\n${index + 1}. ${opp.topic}`);
      console.log(`   - Trend pontsz√°m: ${opp.trendScore}/100`);
      console.log(`   - Verseny: ${opp.competitionLevel}`);
      console.log(`   - Becs√ºlt n√©zetts√©g: ${opp.estimatedViews.toLocaleString()}`);
      console.log(`   - Monetiz√°ci√≥s potenci√°l: ${opp.monetizationPotential}/100`);
      console.log(`   - Optim√°lis id≈ëz√≠t√©s: ${opp.optimalTiming.toLocaleDateString()}`);
      console.log(`   - Megk√∂zel√≠t√©s: ${opp.contentAngle}`);
      console.log(`   - Kulcsszavak: ${opp.targetKeywords.slice(0, 5).join(', ')}`);
    });

    console.log('\nüìà PIACI ELEMZ√âSEK:');
    console.log(`- ${response.marketInsights.overallTrend}`);
    console.log(`- Felt√∂rekv≈ë t√©m√°k: ${response.marketInsights.emergingTopics.join(', ')}`);
    console.log(`- Tel√≠t≈ëd√∂tt t√©m√°k: ${response.marketInsights.saturatedTopics.join(', ')}`);
    console.log(`- Szezon√°lis t√©nyez≈ëk: ${response.marketInsights.seasonalFactors.join(', ')}`);

    console.log('\nüí° JAVASOLT L√âP√âSEK:');
    response.recommendedActions.forEach((action, index) => {
      console.log(`${index + 1}. ${action}`);
    });

    // Specifikus funkci√≥k tesztel√©se

    // 1. Trending t√©m√°k lek√©r√©se
    console.log('\nüî• TRENDING T√âM√ÅK (Finance):');
    const trendingFinance = await agent.getTrendingTopics('finance', 5);
    trendingFinance.forEach(video => {
      console.log(`- ${video.title} (${video.viewCount.toLocaleString()} megtekint√©s)`);
    });

    // 2. Versenyt√°rs elemz√©s
    console.log('\nüèÜ VERSENYT√ÅRS ELEMZ√âS:');
    const competitors = await agent.analyzeCompetitors(config.competitorChannels);
    competitors.forEach(comp => {
      console.log(`\n${comp.channelName}:`);
      console.log(`- Feliratkoz√≥k: ${comp.subscriberCount.toLocaleString()}`);
      console.log(`- √Åtlag n√©zetts√©g: ${comp.averageViews.toLocaleString()}`);
      console.log(`- Tartalom gyakoris√°g: ${comp.contentFrequency} vide√≥/h√©t`);
      console.log(`- Tartalom mint√°k: ${comp.contentPatterns.join(', ')}`);
    });

    // 3. Tartalmi r√©sek azonos√≠t√°sa
    console.log('\nüéØ TARTALMI R√âSEK:');
    const gaps = await agent.identifyContentGaps(
      config.competitorChannels,
      'finance'
    );
    console.log(`Azonos√≠tott r√©sek: ${gaps.slice(0, 10).join(', ')}`);

    // 4. Egyedi √∂tlet pontoz√°sa
    console.log('\nüí≠ EGYEDI √ñTLET √âRT√âKEL√âSE:');
    const customIdea = await agent.scoreContentIdea(
      'AI tools for small business 2024',
      ['ai tools', 'small business', 'productivity', 'automation']
    );
    console.log(`T√©ma: ${customIdea.topic}`);
    console.log(`Pontsz√°m: ${customIdea.trendScore}/100`);
    console.log(`Verseny: ${customIdea.competitionLevel}`);
    console.log(`Becs√ºlt n√©zetts√©g: ${customIdea.estimatedViews.toLocaleString()}`);

  } catch (error) {
    console.error('‚ùå Hiba t√∂rt√©nt:', error);
  }
}

// K√∂rnyezeti v√°ltoz√≥k ellen≈ërz√©se
if (!process.env.YOUTUBE_API_KEY) {
  console.log('‚ö†Ô∏è  Figyelem: YOUTUBE_API_KEY k√∂rnyezeti v√°ltoz√≥ nincs be√°ll√≠tva!');
  console.log('√Åll√≠tsd be a .env f√°jlban vagy export√°ld:');
  console.log('export YOUTUBE_API_KEY="your-api-key-here"');
}

// P√©lda futtat√°sa
if (require.main === module) {
  exampleUsage();
}